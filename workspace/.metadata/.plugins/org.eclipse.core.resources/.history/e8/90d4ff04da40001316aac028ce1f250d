package huffman;

import java.util.*;
import java.io.*;
import java.util.Scanner;
import java.io.IOException;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.ArrayList;

public class test {

	static Double Pa = 0.0, Pb = 0.0, Pc = 0.0, Pd = 0.0;
	static HashMap<Double, String> x = new HashMap<Double, String>();
	static ArrayList<Double> prob = new ArrayList<Double>();

	public static void readfile()
    {
                   try {
                	   BufferedReader br = new BufferedReader(new FileReader("E:\\input.txt"))}
		{
 
			String sCurrentLine;
                        int counter=0;
                       
                                       
                        String []data=new String[200];
			while ((sCurrentLine = br.readLine()) != null) {
                           
                         data[counter] =sCurrentLine ;
                         //System.out.println(sCurrentLine);
                         System.out.println(data[counter]);
                         if("a".equals(sCurrentLine))
                         {
                             Pa=Pa+1;
                         }
                         else if("b".equals(sCurrentLine))
                         {
                             Pb=Pb+1;
                         }
                         else if("c".equals(sCurrentLine))
                         {
                             Pc=Pc+1;
                         }
                         else if("d".equals(sCurrentLine))
                         {
                             Pd=Pd+1;
                         }
                       
                         counter++;
                         
                        }
                        String[] dataNew = new String[counter];
                        System.arraycopy(data, 0, dataNew, 0, counter);
                        data = dataNew;
                        Pa=Pa/data.length;
                        Pb=Pb/data.length;
                        Pc=Pc/data.length;
                        Pd=Pd/data.length;
                        prob.add(Pa);
                        prob.add(Pb);
                        prob.add(Pc);
                        prob.add(Pd);
                        System.out.println("Data length: " + data.length);
                        System.out.println("Pa");
                        System.out.println(Pa);
                        System.out.println("Pb");
                        System.out.println(Pb);
                        System.out.println("Pc");
                        System.out.println(Pc);
                        System.out.println("pd");
                        System.out.println(Pd);
		} catch (IOException e) {
			e.printStackTrace();
		} 

    }

	public static void BFS(ArrayList<Double> num, Double snum, Double totalnum) {
		if (num.size() == 1) {
			return;
		}
		Collections.sort(num);
		snum = num.get(0);
		totalnum = num.get(0) + num.get(1);
		num.remove(0);
		num.remove(0);
		num.add(totalnum);
		BFS(num, snum, totalnum);
		if (num.size() == 1) {
			x.put(totalnum, "");
		}
		int index = num.indexOf(totalnum);
		num.remove(index);
		num.add(snum);
		num.add(totalnum - snum);
		x.put(snum, x.get(totalnum) + "0");
		x.put(totalnum - snum, x.get(totalnum) + "1");
	}

	public static void main(String[] args) {
		// Double snum = null;
		// Double totalnum = null;
		readfile();
		// BFS(prob,snum,totalnum );
	}

}
