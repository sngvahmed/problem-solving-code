package other;

import java.util.*;
import java.io.*;
import java.util.Scanner;
import java.io.IOException;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.ArrayList;

public class test {

	static double Pa = 0.0, Pb = 0.0, Pc = 0.0, Pd = 0.0;
	static HashMap<Double, String> x = new HashMap<Double, String>();
	static ArrayList<Double> prob = new ArrayList<Double>();

	public static void readfile() {
		try {
			BufferedReader br = new BufferedReader(new FileReader("input.txt"));
			String sCurrentLine;
			int counter = 0;
			String data = "";
			while ((sCurrentLine = br.readLine()) != null) {
				data = sCurrentLine;
				System.out.println(" :: " + data);
			}
			for (int i = 0; i < data.length(); i++) {
				if (data.charAt(i) == 'a') {
					Pa = Pa + 1;
				} else if (data.charAt(i) == 'b') {
					Pb = Pb + 1;
				} else if (data.charAt(i) == 'c') {
					Pc = Pc + 1;
				} else if (data.charAt(i) == 'd') {
					Pd = Pd + 1;
				}
				counter++;
			}
			System.out.println((double) (counter));
			Pa = Pa / (double) (counter);
			Pb = Pb / (double) (counter);
			Pc = Pc / (double) (counter);
			Pd = Pd / (double) (counter);
			prob.add(Pa);
			prob.add(Pb);
			prob.add(Pc);
			prob.add(Pd);
			System.out.println("Data length: " + data.length());
			System.out.println("Pa");
			System.out.println(Pa);
			System.out.println("Pb");
			System.out.println(Pb);
			System.out.println("Pc");
			System.out.println(Pc);
			System.out.println("pd");
			System.out.println(Pd);
		} catch (IOException e) {
			e.printStackTrace();
		}

	}

	public static void BFS(ArrayList<Double> num, Double snum, Double totalnum) {
		if (num.size() == 1) {
			return;
		}
		Collections.sort(num);
		snum = num.get(0);
		totalnum = num.get(0) + num.get(1);
		num.remove(0);
		num.remove(0);
		num.add(totalnum);
		BFS(num, snum, totalnum);
		if (num.size() == 1) {
			x.put(totalnum, "");
		}
		int index = num.indexOf(totalnum);
		num.remove(index);
		num.add(snum);
		num.add(totalnum - snum);
		x.put(snum, x.get(totalnum) + "0");
		x.put(totalnum - snum, x.get(totalnum) + "1");
	}

	public static void main(String[] args) {
		readfile();
		BFS(prob, 0.0, 0.0);
		for (int i = 0; i < prob.size(); i++) {

		}
	}

}
