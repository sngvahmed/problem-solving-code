#include <cstring>
#include <string.h>
#include <map>
#include <deque>
#include <queue>
#include <stack>
#include <sstream>
#include <bitset>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <fstream>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <algorithm>
#include <vector>
#include <set>
#include <complex>
#include <list>
#include <valarray>
#include <memory.h>
#include <climits>
#include <math.h>

using namespace std;
vector<string> mt(10);
map<char, vector<string> > mp;
bool rot90(char d) {
	int r = 9;
	int cont = 0;
	for (int i = 0; i < 10; i++, r--) {
		for (int e = 0; e < 10; e++) {
			if (mp[d][i][e] != mt[e][r]) {
				cont++;
			}
		}
	}
	if (cont > 20) {
		return 0;
	}
	return 1;
}
bool rot0(char d) {
	int cont = 0;
	for (int i = 0; i < 10; i++)
		for (int e = 0; e < 10; e++)
			if (mp[d][i][e] != mt[i][e]) {
				cont++;
			}
	if (cont > 20)
		return 0;
	return 1;
}
bool rot180(char d) {
	int t = 9, r = 9;
	int cont = 0;
	for (int i = 0; i < 10; i++, t--) {
		r = 9;
		for (int e = 0; e < 10; e++, r--) {
			if (mp[d][i][e] != mt[t][r])
				cont++;
		}
	}
	if (cont > 20)
		return 0;
	return 1;
}
bool rot270(char d) {
	int cont = 0;
	for (int i = 0; i < 10; i++) {
		int r = 9;
		for (int e = 0; e < 10; e++, r--) {
			if (mp[d][i][e] != mt[r][i])
				cont++;
		}
	}
	if (cont > 20)
		return 0;
	return 1;
}
int main() {
	string ret = "";
	int x;
	scanf("%d", &x);
	char arr[x];
	int sd = x;
	char t;
	int rr = 0;
	while (x--) {
		cin >> t;
		arr[rr] = t;
		for (int i = 0; i < 10; i++) {
			mp[t].push_back("");
			cin >> mp[t][i];
		}
		rr++;
	}
	scanf("%d", &x);
	while (x--) {
		int r = 10;
		int ii = 0;
		while (r--) {
			cin >> mt[ii];
			ii++;
		}
		for (int i = 0; i < sd; i++) {
			int mx = max(rot0(arr[i]),
					max(rot180(arr[i]), max(rot270(arr[i]), rot90(arr[i]))));
			if (mx == 1) {
				ret += arr[i];
				break;
			}
		}
	}
	cout << ret;
}
